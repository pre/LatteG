% Sisäänkirjautumisen historia:
% https://docs.google.com/document/pub?id=1O7jyQLb7dW6EnJrFsWZDyh0Yq0aFJU5UJ4i5QzYlTjU#h.fvyllnfjm3eo
% http://goo.gl/R8pMP
% The hack that makes Internet Identity possible
%
% In a “simple” computer science world, there would be one global user account system, similar to DNS, where every person was assigned a single unique numerical ID at birth, and each person also had a perfect way to prove who they were.  Every website could then use those user IDs to store information associated with the person.
% Obviously that does not exist, and for decades every user account system issued its own IDs (and sometimes usernames) to users.  Such systems were “simple” to write, but painful for users.
% Then during the early 90s, a “hack” was found that created the foundation of most user account systems on the web.  That “hack” was the idea of logging into a website with your email address, and proving you were the owner of that email address by having the site send you an SMTP message with a hyperlink back to the site which contained a long code.  For the few of us who considered ourselves identity geeks at the time, this did not seem like an approach that would last a long time.  Even SMTP seemed like a fad when we already had high end systems like Lotus Notes relying on things like PKI, digital certifications, signing, encryption, etc.
% However twenty years later, that “hack” is still the most powerful technique that we rely on to build user account systems.  From a purist perspective, emails have some downsides as identifiers. Much of this guide will discuss those downsides, and how to handle them.  However nothing else, even phone numbers or social network IDs, has come even close to being as powerful an identifier.
% Two of the downsides are that users change email address over time, and that the same email address is sometimes assigned to different people at different time periods.  Because of those, and other complications, almost every website still maintains its own “local ID” system just as user accounts did before the 90s.  The one key addition is that those local IDs are then mapped to and from a user’s email address.
%
% Human -> Emails -> Local IDs -> Passwords
%
% So humans have a map of the emails they use, and websites map an email to a local ID.  Website’s user account systems also have a critical role of authenticating the owner of that email address.  Note we did not say authenticate the human, but rather that owner of the email address.  The difference is import, as well as powerful, but it also adds complexity.
% The simplest way to authenticate the owner of the email address is to use the “hack” of sending them a URL with a code every time they want to login.  However when that “hack” first became popular, email services had significant downtime, so websites did not want to be reliant on them.  So instead we relied on a scheme that had been used for user account systems that issued their own user IDs instead of relying on email address, and that scheme was passwords.
% Combining the “hack” with passwords seemed great.  The best part was that if the user forgot their password, the website could just use the “hack” again to verify the owner of that email address and let them pick a new password.
%


id_in_federation_systems_2005
With the advent of distributed computing models such as web services, there are increased
inter-dependencies among such SP’s. As a result,
the current trend [10, 9] is to focus on
inter-organization and interdependent management of identity information [17] rather than identity
management solutions for internal use.  This is referred to as federated identity management.

Federated identity is a distributed computing construct that recognizes the fact that individuals move between
corporate boundaries at an increasingly frequent rate. Practical applications of federated identities are
represented by large multinational companies which have to manage several heterogeneous systems at the
same time [17]. An effort in this sense is represented by the notion of Single Sign-On (SSO) [20], which
enables a user to login to multiple organizations or SP’s by using the same username and password. This
approach increases usability and adds security by reducing the number of passwords that need to be
managed.
17 E. Norlin and A. Durand. Whitepaper on towards federated
identity management. In Ping Identity Corporation, 2002.





7 Laws of Identity:

A comparison between the bricks-and-mortar world and the online world is illustrative: In the
bricks-and-mortar world you can tell when you are at a branch of your bank. It would be very
difﬁcult to set up a fake bank branch and convince people to do transactions there. But in today’s
online world it is trivial to set up a fake banking site (or e-commerce site …) and convince a
signiﬁcant portion of the population that it’s the real thing. This is an enormous identity problem.
Web sites currently do not have reliable ways of identifying themselves to people, thus enabling
impostors to ﬂourish. What is needed is reliable site-to-user authentication, which aims to make
it as difﬁcult to produce counterfeit services in the online world, as it is to produce them in the
physical world.

The Laws of Identity

The "Laws of Identity" are intended to codify a set of fundamental principles to which any universally adopted, sustainable identity architecture must conform. The Laws were proposed, debated, and refined through a long-running, open, and continuing dialogue on the Internet. Taken together, the Laws define the architecture of the identity metasystem.

They are:

User Control and Consent: Identity systems must only reveal information identifying a user with the user's consent.
Minimal Disclosure for a Constrained Use: The identity system must disclose the least identifying information possible, as this is the most stable, long-term solution.
Justifiable Parties: Identity systems must be designed so the disclosure of identifying information is limited to parties having a necessary and justifiable place in a given identity relationship.
Directed Identity: A universal identity system must support both "omni-directional" identifiers for use by public entities and "uni-directional" identifiers for use by private entities, thus facilitating discovery while preventing unnecessary release of correlation handles.
Pluralism of Operators and Technologies: A universal identity solution must utilize and enable the interoperation of multiple identity technologies run by multiple identity providers.
Human Integration: Identity systems must define the human user to be a component of the distributed system, integrated through unambiguous human-machine communication mechanisms offering protection against identity attacks.
Consistent Experience Across Contexts: The unifying identity metasystem must guarantee its users a simple, consistent experience while enabling separation of contexts through multiple operators and technologies.
For more information, see the Laws of Identity whitepaper. To join in the discussion of the Laws of Identity, visit www.identityblog.com.


Roles within the Identity Metasystem

Different parties participate in the metasystem in different ways. The three roles within the metasystem are:

Identity Providers, which issue digital identities. For example, credit card providers might issue identities enabling payment, businesses might issue identities to their customers, governments might issue identities to citizens, and individuals might use self-issued identities in contexts like signing on to Web sites.
Relying Parties, which require identities. For example, a Web site or online service that utilizes identities offered by other parties.
Subjects, which are the individuals and other entities about whom claims are made. Examples of subjects include end users, companies, and organizations.
In many cases, the participants in the metasystem play more than one role, and often all three.

---

http://acs.codeplex.com/
ACS 2.0 contains many features that substantially advance the capabilities of the previous release. The main features of this release are listed below:
Integrates with Windows Identity Foundation (WIF) and tooling
Out-of-the-box support for popular web identity providers including: Windows Live ID, Google, Yahoo, and Facebook
Out-of-the-box support for Active Directory Federation Services 2.0
Support for OAuth 2.0 (draft 13), WS-Trust, and WS-Federation protocols
Support for the SAML 1.1, SAML 2.0, and Simple Web Token (SWT) token formats
Integrated and customizable Home Realm Discovery that allows users to choose their identity provider
An OData-based Management Service that provides programmatic access to ACS configuration
A Web Portal that allows administrative access to ACS configuration

https://www.windowsazure.com/en-us/develop/net/how-to-guides/access-control/
Windows Azure ACS is built on the principals of claims-based identity - a consistent approach to creating authentication mechanisms for applications running on-premises or in the cloud. Claims-based identity provides a common way for applications and services to acquire the identity information they need about users inside their organization, in other organizations, and on the Internet.


--------


7 Laws of Identity.

The Laws of Identity [The Laws of Identity. Microsoft Whitepaper, May 2005.] are intended to codify a set of fundamental principles to which a universally adopted,
sustainable identity architecture must conform. The Laws were proposed, debated, and refined through a longrunning, open, and
continuing dialogue on the Internet [http://www.identityblog.com/]

Ks. tiivistelmä appendix 1: http://research.microsoft.com/en-us/um/people/mbj/papers/Identity_Metasystem_Design_Rationale.pdf?guid=on



declaration of identity
http://nat.sakimura.org/2011/07/04/declaration-of-identity/
http://nat.sakimura.org/wp-content/uploads/2011/07/Declaration-Final-Draft.pdf

